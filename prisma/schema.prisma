generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  status    Status?   @default(ACTIVE)
  role      UserRole? @default(STUDENT)
  token     String?
  phone     String?
  address   String?
  schoolId  Int?
  school    Sekolah?  @relation(fields: [schoolId], references: [schoolid])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Sekolah {
  schoolid     Int           @id @default(autoincrement())
  nama_sekolah String
  address      String?
  npsn         String
  type         SchoolType?   @default(SMA)
  schoolStatus SchoolStatus? @default(NEGERI)
  kurikulum    String?
  phone        String?
  email        String?       @unique
  website      String?
  logo         String?
  status       Status?       @default(ACTIVE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  User         User[]
  Student      Student[]
  Grade        Grade[]
}

model Student {
  studentId      Int           @id @default(autoincrement())
  siswa_nama     String
  siswa_nis      String
  siswa_nisn     String
  jenis_kelamin  JenisKelamin?
  siswa_slug     String
  siswa_alamat   String?
  siswa_telp     String?
  siswa_email    String?       @unique
  siswa_password String
  siswa_status   Status        @default(NEW)
  school         Sekolah?      @relation(fields: [schoolId], references: [schoolid])
  schoolId       Int?
  gradeId        Int?
  grade          Grade?        @relation(fields: [gradeId], references: [gradeId])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Grade {
  gradeId   Int       @id @default(autoincrement())
  name      String
  level     String
  guruId    Int?
  majorId   Int?
  schoolId  Int?
  school    Sekolah?  @relation(fields: [schoolId], references: [schoolid])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Student   Student[]
}

enum JenisKelamin {
  LAKI_LAKI
  PEREMPUAN
}

enum SchoolType {
  SMA
  SMK
  MA
}

enum SchoolStatus {
  NEGERI
  SWASTA
}

enum Kurikulum {
  K13
  KTSP
  MERDEKA
}

enum UserRole {
  ADMIN
  TEACHER
  STUDENT
}

enum Status {
  ACTIVE
  INACTIVE
  SUSPENDED
  NEW
  PENDING
  APPROVED
  REJECTED
  COMPLETED
  CANCELLED
  FAILED
  SUCCESS
}
